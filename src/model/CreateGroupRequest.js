/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GroupTypes from './GroupTypes';

/**
 * The CreateGroupRequest model module.
 * @module model/CreateGroupRequest
 * @version v1
 */
class CreateGroupRequest {
    /**
     * Constructs a new <code>CreateGroupRequest</code>.
     * @alias module:model/CreateGroupRequest
     * @param title {String} 
     * @param productIds {Array.<Number>} 
     * @param priority {Number} 
     * @param type {module:model/GroupTypes} 
     */
    constructor(title, productIds, priority, type) { 
        
        CreateGroupRequest.initialize(this, title, productIds, priority, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, productIds, priority, type) { 
        obj['title'] = title;
        obj['productIds'] = productIds;
        obj['priority'] = priority;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CreateGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateGroupRequest} The populated <code>CreateGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGroupRequest();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('productIds')) {
                obj['productIds'] = ApiClient.convertToType(data['productIds'], ['Number']);
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = GroupTypes.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('main')) {
                obj['main'] = ApiClient.convertToType(data['main'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateGroupRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['productIds'])) {
            throw new Error("Expected the field `productIds` to be an array in the JSON data but got " + data['productIds']);
        }

        return true;
    }


}

CreateGroupRequest.RequiredProperties = ["title", "productIds", "priority", "type"];

/**
 * @member {String} title
 */
CreateGroupRequest.prototype['title'] = undefined;

/**
 * @member {String} description
 */
CreateGroupRequest.prototype['description'] = undefined;

/**
 * @member {Array.<Number>} productIds
 */
CreateGroupRequest.prototype['productIds'] = undefined;

/**
 * @member {Number} priority
 */
CreateGroupRequest.prototype['priority'] = undefined;

/**
 * @member {module:model/GroupTypes} type
 */
CreateGroupRequest.prototype['type'] = undefined;

/**
 * @member {Boolean} main
 */
CreateGroupRequest.prototype['main'] = undefined;






export default CreateGroupRequest;

