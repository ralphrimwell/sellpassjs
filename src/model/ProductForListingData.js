/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductVariantForListingData from './ProductVariantForListingData';
import StatsForGetShopResponse from './StatsForGetShopResponse';

/**
 * The ProductForListingData model module.
 * @module model/ProductForListingData
 * @version v1
 */
class ProductForListingData {
    /**
     * Constructs a new <code>ProductForListingData</code>.
     * @alias module:model/ProductForListingData
     */
    constructor() { 
        
        ProductForListingData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductForListingData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductForListingData} obj Optional instance to populate.
     * @return {module:model/ProductForListingData} The populated <code>ProductForListingData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductForListingData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('shortDescription')) {
                obj['shortDescription'] = ApiClient.convertToType(data['shortDescription'], 'String');
            }
            if (data.hasOwnProperty('thumbnailCfImageId')) {
                obj['thumbnailCfImageId'] = ApiClient.convertToType(data['thumbnailCfImageId'], 'String');
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = StatsForGetShopResponse.constructFromObject(data['statistics']);
            }
            if (data.hasOwnProperty('variants')) {
                obj['variants'] = ApiClient.convertToType(data['variants'], [ProductVariantForListingData]);
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'Number');
            }
            if (data.hasOwnProperty('onHold')) {
                obj['onHold'] = ApiClient.convertToType(data['onHold'], 'Boolean');
            }
            if (data.hasOwnProperty('unlisted')) {
                obj['unlisted'] = ApiClient.convertToType(data['unlisted'], 'Boolean');
            }
            if (data.hasOwnProperty('private')) {
                obj['private'] = ApiClient.convertToType(data['private'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductForListingData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductForListingData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['shortDescription'] && !(typeof data['shortDescription'] === 'string' || data['shortDescription'] instanceof String)) {
            throw new Error("Expected the field `shortDescription` to be a primitive type in the JSON string but got " + data['shortDescription']);
        }
        // ensure the json data is a string
        if (data['thumbnailCfImageId'] && !(typeof data['thumbnailCfImageId'] === 'string' || data['thumbnailCfImageId'] instanceof String)) {
            throw new Error("Expected the field `thumbnailCfImageId` to be a primitive type in the JSON string but got " + data['thumbnailCfImageId']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          StatsForGetShopResponse.validateJSON(data['statistics']);
        }
        if (data['variants']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['variants'])) {
                throw new Error("Expected the field `variants` to be an array in the JSON data but got " + data['variants']);
            }
            // validate the optional field `variants` (array)
            for (const item of data['variants']) {
                ProductVariantForListingData.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
ProductForListingData.prototype['id'] = undefined;

/**
 * @member {String} title
 */
ProductForListingData.prototype['title'] = undefined;

/**
 * @member {String} description
 */
ProductForListingData.prototype['description'] = undefined;

/**
 * @member {String} shortDescription
 */
ProductForListingData.prototype['shortDescription'] = undefined;

/**
 * @member {String} thumbnailCfImageId
 */
ProductForListingData.prototype['thumbnailCfImageId'] = undefined;

/**
 * @member {module:model/StatsForGetShopResponse} statistics
 */
ProductForListingData.prototype['statistics'] = undefined;

/**
 * @member {Array.<module:model/ProductVariantForListingData>} variants
 */
ProductForListingData.prototype['variants'] = undefined;

/**
 * @member {Number} groupId
 */
ProductForListingData.prototype['groupId'] = undefined;

/**
 * @member {Boolean} onHold
 */
ProductForListingData.prototype['onHold'] = undefined;

/**
 * @member {Boolean} unlisted
 */
ProductForListingData.prototype['unlisted'] = undefined;

/**
 * @member {Boolean} private
 */
ProductForListingData.prototype['private'] = undefined;






export default ProductForListingData;

