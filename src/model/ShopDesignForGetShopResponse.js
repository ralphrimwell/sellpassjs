/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShopDesignForGetShopResponse model module.
 * @module model/ShopDesignForGetShopResponse
 * @version v1
 */
class ShopDesignForGetShopResponse {
    /**
     * Constructs a new <code>ShopDesignForGetShopResponse</code>.
     * @alias module:model/ShopDesignForGetShopResponse
     */
    constructor() { 
        
        ShopDesignForGetShopResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShopDesignForGetShopResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShopDesignForGetShopResponse} obj Optional instance to populate.
     * @return {module:model/ShopDesignForGetShopResponse} The populated <code>ShopDesignForGetShopResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShopDesignForGetShopResponse();

            if (data.hasOwnProperty('cfImageId')) {
                obj['cfImageId'] = ApiClient.convertToType(data['cfImageId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('buttonText')) {
                obj['buttonText'] = ApiClient.convertToType(data['buttonText'], 'String');
            }
            if (data.hasOwnProperty('disableButton')) {
                obj['disableButton'] = ApiClient.convertToType(data['disableButton'], 'Boolean');
            }
            if (data.hasOwnProperty('disableTitle')) {
                obj['disableTitle'] = ApiClient.convertToType(data['disableTitle'], 'Boolean');
            }
            if (data.hasOwnProperty('disableDescription')) {
                obj['disableDescription'] = ApiClient.convertToType(data['disableDescription'], 'Boolean');
            }
            if (data.hasOwnProperty('backgroundCfImageId')) {
                obj['backgroundCfImageId'] = ApiClient.convertToType(data['backgroundCfImageId'], 'String');
            }
            if (data.hasOwnProperty('backgroundColor')) {
                obj['backgroundColor'] = ApiClient.convertToType(data['backgroundColor'], 'String');
            }
            if (data.hasOwnProperty('primaryColor')) {
                obj['primaryColor'] = ApiClient.convertToType(data['primaryColor'], 'String');
            }
            if (data.hasOwnProperty('primaryColorAccent')) {
                obj['primaryColorAccent'] = ApiClient.convertToType(data['primaryColorAccent'], 'String');
            }
            if (data.hasOwnProperty('secondaryColor')) {
                obj['secondaryColor'] = ApiClient.convertToType(data['secondaryColor'], 'String');
            }
            if (data.hasOwnProperty('primaryTextColor')) {
                obj['primaryTextColor'] = ApiClient.convertToType(data['primaryTextColor'], 'String');
            }
            if (data.hasOwnProperty('secondaryTextColor')) {
                obj['secondaryTextColor'] = ApiClient.convertToType(data['secondaryTextColor'], 'String');
            }
            if (data.hasOwnProperty('disableShadows')) {
                obj['disableShadows'] = ApiClient.convertToType(data['disableShadows'], 'Boolean');
            }
            if (data.hasOwnProperty('disableSupport')) {
                obj['disableSupport'] = ApiClient.convertToType(data['disableSupport'], 'Boolean');
            }
            if (data.hasOwnProperty('isMainPageVisible')) {
                obj['isMainPageVisible'] = ApiClient.convertToType(data['isMainPageVisible'], 'Boolean');
            }
            if (data.hasOwnProperty('fontLink')) {
                obj['fontLink'] = ApiClient.convertToType(data['fontLink'], 'String');
            }
            if (data.hasOwnProperty('darkMode')) {
                obj['darkMode'] = ApiClient.convertToType(data['darkMode'], 'Boolean');
            }
            if (data.hasOwnProperty('disableBusinessName')) {
                obj['disableBusinessName'] = ApiClient.convertToType(data['disableBusinessName'], 'Boolean');
            }
            if (data.hasOwnProperty('disableSearchBar')) {
                obj['disableSearchBar'] = ApiClient.convertToType(data['disableSearchBar'], 'Boolean');
            }
            if (data.hasOwnProperty('centerProductTitle')) {
                obj['centerProductTitle'] = ApiClient.convertToType(data['centerProductTitle'], 'Boolean');
            }
            if (data.hasOwnProperty('disableBusinessLogo')) {
                obj['disableBusinessLogo'] = ApiClient.convertToType(data['disableBusinessLogo'], 'Boolean');
            }
            if (data.hasOwnProperty('disableReviews')) {
                obj['disableReviews'] = ApiClient.convertToType(data['disableReviews'], 'Boolean');
            }
            if (data.hasOwnProperty('disableProductsSold')) {
                obj['disableProductsSold'] = ApiClient.convertToType(data['disableProductsSold'], 'Boolean');
            }
            if (data.hasOwnProperty('hideOutOfStockProducts')) {
                obj['hideOutOfStockProducts'] = ApiClient.convertToType(data['hideOutOfStockProducts'], 'Boolean');
            }
            if (data.hasOwnProperty('googleAnalyticsKey')) {
                obj['googleAnalyticsKey'] = ApiClient.convertToType(data['googleAnalyticsKey'], 'String');
            }
            if (data.hasOwnProperty('crispChatKey')) {
                obj['crispChatKey'] = ApiClient.convertToType(data['crispChatKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShopDesignForGetShopResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShopDesignForGetShopResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cfImageId'] && !(typeof data['cfImageId'] === 'string' || data['cfImageId'] instanceof String)) {
            throw new Error("Expected the field `cfImageId` to be a primitive type in the JSON string but got " + data['cfImageId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['buttonText'] && !(typeof data['buttonText'] === 'string' || data['buttonText'] instanceof String)) {
            throw new Error("Expected the field `buttonText` to be a primitive type in the JSON string but got " + data['buttonText']);
        }
        // ensure the json data is a string
        if (data['backgroundCfImageId'] && !(typeof data['backgroundCfImageId'] === 'string' || data['backgroundCfImageId'] instanceof String)) {
            throw new Error("Expected the field `backgroundCfImageId` to be a primitive type in the JSON string but got " + data['backgroundCfImageId']);
        }
        // ensure the json data is a string
        if (data['backgroundColor'] && !(typeof data['backgroundColor'] === 'string' || data['backgroundColor'] instanceof String)) {
            throw new Error("Expected the field `backgroundColor` to be a primitive type in the JSON string but got " + data['backgroundColor']);
        }
        // ensure the json data is a string
        if (data['primaryColor'] && !(typeof data['primaryColor'] === 'string' || data['primaryColor'] instanceof String)) {
            throw new Error("Expected the field `primaryColor` to be a primitive type in the JSON string but got " + data['primaryColor']);
        }
        // ensure the json data is a string
        if (data['primaryColorAccent'] && !(typeof data['primaryColorAccent'] === 'string' || data['primaryColorAccent'] instanceof String)) {
            throw new Error("Expected the field `primaryColorAccent` to be a primitive type in the JSON string but got " + data['primaryColorAccent']);
        }
        // ensure the json data is a string
        if (data['secondaryColor'] && !(typeof data['secondaryColor'] === 'string' || data['secondaryColor'] instanceof String)) {
            throw new Error("Expected the field `secondaryColor` to be a primitive type in the JSON string but got " + data['secondaryColor']);
        }
        // ensure the json data is a string
        if (data['primaryTextColor'] && !(typeof data['primaryTextColor'] === 'string' || data['primaryTextColor'] instanceof String)) {
            throw new Error("Expected the field `primaryTextColor` to be a primitive type in the JSON string but got " + data['primaryTextColor']);
        }
        // ensure the json data is a string
        if (data['secondaryTextColor'] && !(typeof data['secondaryTextColor'] === 'string' || data['secondaryTextColor'] instanceof String)) {
            throw new Error("Expected the field `secondaryTextColor` to be a primitive type in the JSON string but got " + data['secondaryTextColor']);
        }
        // ensure the json data is a string
        if (data['fontLink'] && !(typeof data['fontLink'] === 'string' || data['fontLink'] instanceof String)) {
            throw new Error("Expected the field `fontLink` to be a primitive type in the JSON string but got " + data['fontLink']);
        }
        // ensure the json data is a string
        if (data['googleAnalyticsKey'] && !(typeof data['googleAnalyticsKey'] === 'string' || data['googleAnalyticsKey'] instanceof String)) {
            throw new Error("Expected the field `googleAnalyticsKey` to be a primitive type in the JSON string but got " + data['googleAnalyticsKey']);
        }
        // ensure the json data is a string
        if (data['crispChatKey'] && !(typeof data['crispChatKey'] === 'string' || data['crispChatKey'] instanceof String)) {
            throw new Error("Expected the field `crispChatKey` to be a primitive type in the JSON string but got " + data['crispChatKey']);
        }

        return true;
    }


}



/**
 * @member {String} cfImageId
 */
ShopDesignForGetShopResponse.prototype['cfImageId'] = undefined;

/**
 * @member {String} title
 */
ShopDesignForGetShopResponse.prototype['title'] = undefined;

/**
 * @member {String} description
 */
ShopDesignForGetShopResponse.prototype['description'] = undefined;

/**
 * @member {String} buttonText
 */
ShopDesignForGetShopResponse.prototype['buttonText'] = undefined;

/**
 * @member {Boolean} disableButton
 */
ShopDesignForGetShopResponse.prototype['disableButton'] = undefined;

/**
 * @member {Boolean} disableTitle
 */
ShopDesignForGetShopResponse.prototype['disableTitle'] = undefined;

/**
 * @member {Boolean} disableDescription
 */
ShopDesignForGetShopResponse.prototype['disableDescription'] = undefined;

/**
 * @member {String} backgroundCfImageId
 */
ShopDesignForGetShopResponse.prototype['backgroundCfImageId'] = undefined;

/**
 * @member {String} backgroundColor
 */
ShopDesignForGetShopResponse.prototype['backgroundColor'] = undefined;

/**
 * @member {String} primaryColor
 */
ShopDesignForGetShopResponse.prototype['primaryColor'] = undefined;

/**
 * @member {String} primaryColorAccent
 */
ShopDesignForGetShopResponse.prototype['primaryColorAccent'] = undefined;

/**
 * @member {String} secondaryColor
 */
ShopDesignForGetShopResponse.prototype['secondaryColor'] = undefined;

/**
 * @member {String} primaryTextColor
 */
ShopDesignForGetShopResponse.prototype['primaryTextColor'] = undefined;

/**
 * @member {String} secondaryTextColor
 */
ShopDesignForGetShopResponse.prototype['secondaryTextColor'] = undefined;

/**
 * @member {Boolean} disableShadows
 */
ShopDesignForGetShopResponse.prototype['disableShadows'] = undefined;

/**
 * @member {Boolean} disableSupport
 */
ShopDesignForGetShopResponse.prototype['disableSupport'] = undefined;

/**
 * @member {Boolean} isMainPageVisible
 */
ShopDesignForGetShopResponse.prototype['isMainPageVisible'] = undefined;

/**
 * @member {String} fontLink
 */
ShopDesignForGetShopResponse.prototype['fontLink'] = undefined;

/**
 * @member {Boolean} darkMode
 */
ShopDesignForGetShopResponse.prototype['darkMode'] = undefined;

/**
 * @member {Boolean} disableBusinessName
 */
ShopDesignForGetShopResponse.prototype['disableBusinessName'] = undefined;

/**
 * @member {Boolean} disableSearchBar
 */
ShopDesignForGetShopResponse.prototype['disableSearchBar'] = undefined;

/**
 * @member {Boolean} centerProductTitle
 */
ShopDesignForGetShopResponse.prototype['centerProductTitle'] = undefined;

/**
 * @member {Boolean} disableBusinessLogo
 */
ShopDesignForGetShopResponse.prototype['disableBusinessLogo'] = undefined;

/**
 * @member {Boolean} disableReviews
 */
ShopDesignForGetShopResponse.prototype['disableReviews'] = undefined;

/**
 * @member {Boolean} disableProductsSold
 */
ShopDesignForGetShopResponse.prototype['disableProductsSold'] = undefined;

/**
 * @member {Boolean} hideOutOfStockProducts
 */
ShopDesignForGetShopResponse.prototype['hideOutOfStockProducts'] = undefined;

/**
 * @member {String} googleAnalyticsKey
 */
ShopDesignForGetShopResponse.prototype['googleAnalyticsKey'] = undefined;

/**
 * @member {String} crispChatKey
 */
ShopDesignForGetShopResponse.prototype['crispChatKey'] = undefined;






export default ShopDesignForGetShopResponse;

