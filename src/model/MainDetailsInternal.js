/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DiscordSocialConnectSettingsForGetShopResponse from './DiscordSocialConnectSettingsForGetShopResponse';
import ShopDesignForGetShopResponse from './ShopDesignForGetShopResponse';
import ShopSeo from './ShopSeo';
import SocialLinkForGetShopResponse from './SocialLinkForGetShopResponse';

/**
 * The MainDetailsInternal model module.
 * @module model/MainDetailsInternal
 * @version v1
 */
class MainDetailsInternal {
    /**
     * Constructs a new <code>MainDetailsInternal</code>.
     * @alias module:model/MainDetailsInternal
     */
    constructor() { 
        
        MainDetailsInternal.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MainDetailsInternal</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MainDetailsInternal} obj Optional instance to populate.
     * @return {module:model/MainDetailsInternal} The populated <code>MainDetailsInternal</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MainDetailsInternal();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('discordOauthUrl')) {
                obj['discordOauthUrl'] = ApiClient.convertToType(data['discordOauthUrl'], 'String');
            }
            if (data.hasOwnProperty('shopPopUp')) {
                obj['shopPopUp'] = ApiClient.convertToType(data['shopPopUp'], 'String');
            }
            if (data.hasOwnProperty('shopTerms')) {
                obj['shopTerms'] = ApiClient.convertToType(data['shopTerms'], 'String');
            }
            if (data.hasOwnProperty('onHold')) {
                obj['onHold'] = ApiClient.convertToType(data['onHold'], 'Boolean');
            }
            if (data.hasOwnProperty('enableFaq')) {
                obj['enableFaq'] = ApiClient.convertToType(data['enableFaq'], 'Boolean');
            }
            if (data.hasOwnProperty('subscriptionName')) {
                obj['subscriptionName'] = ApiClient.convertToType(data['subscriptionName'], 'String');
            }
            if (data.hasOwnProperty('seoDetails')) {
                obj['seoDetails'] = ShopSeo.constructFromObject(data['seoDetails']);
            }
            if (data.hasOwnProperty('defaultDiscordSettings')) {
                obj['defaultDiscordSettings'] = DiscordSocialConnectSettingsForGetShopResponse.constructFromObject(data['defaultDiscordSettings']);
            }
            if (data.hasOwnProperty('design')) {
                obj['design'] = ShopDesignForGetShopResponse.constructFromObject(data['design']);
            }
            if (data.hasOwnProperty('socialLinks')) {
                obj['socialLinks'] = ApiClient.convertToType(data['socialLinks'], [SocialLinkForGetShopResponse]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MainDetailsInternal</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MainDetailsInternal</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['discordOauthUrl'] && !(typeof data['discordOauthUrl'] === 'string' || data['discordOauthUrl'] instanceof String)) {
            throw new Error("Expected the field `discordOauthUrl` to be a primitive type in the JSON string but got " + data['discordOauthUrl']);
        }
        // ensure the json data is a string
        if (data['shopPopUp'] && !(typeof data['shopPopUp'] === 'string' || data['shopPopUp'] instanceof String)) {
            throw new Error("Expected the field `shopPopUp` to be a primitive type in the JSON string but got " + data['shopPopUp']);
        }
        // ensure the json data is a string
        if (data['shopTerms'] && !(typeof data['shopTerms'] === 'string' || data['shopTerms'] instanceof String)) {
            throw new Error("Expected the field `shopTerms` to be a primitive type in the JSON string but got " + data['shopTerms']);
        }
        // ensure the json data is a string
        if (data['subscriptionName'] && !(typeof data['subscriptionName'] === 'string' || data['subscriptionName'] instanceof String)) {
            throw new Error("Expected the field `subscriptionName` to be a primitive type in the JSON string but got " + data['subscriptionName']);
        }
        // validate the optional field `seoDetails`
        if (data['seoDetails']) { // data not null
          ShopSeo.validateJSON(data['seoDetails']);
        }
        // validate the optional field `defaultDiscordSettings`
        if (data['defaultDiscordSettings']) { // data not null
          DiscordSocialConnectSettingsForGetShopResponse.validateJSON(data['defaultDiscordSettings']);
        }
        // validate the optional field `design`
        if (data['design']) { // data not null
          ShopDesignForGetShopResponse.validateJSON(data['design']);
        }
        if (data['socialLinks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['socialLinks'])) {
                throw new Error("Expected the field `socialLinks` to be an array in the JSON data but got " + data['socialLinks']);
            }
            // validate the optional field `socialLinks` (array)
            for (const item of data['socialLinks']) {
                SocialLinkForGetShopResponse.validateJsonObject(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
MainDetailsInternal.prototype['id'] = undefined;

/**
 * @member {String} name
 */
MainDetailsInternal.prototype['name'] = undefined;

/**
 * @member {String} discordOauthUrl
 */
MainDetailsInternal.prototype['discordOauthUrl'] = undefined;

/**
 * @member {String} shopPopUp
 */
MainDetailsInternal.prototype['shopPopUp'] = undefined;

/**
 * @member {String} shopTerms
 */
MainDetailsInternal.prototype['shopTerms'] = undefined;

/**
 * @member {Boolean} onHold
 */
MainDetailsInternal.prototype['onHold'] = undefined;

/**
 * @member {Boolean} enableFaq
 */
MainDetailsInternal.prototype['enableFaq'] = undefined;

/**
 * @member {String} subscriptionName
 */
MainDetailsInternal.prototype['subscriptionName'] = undefined;

/**
 * @member {module:model/ShopSeo} seoDetails
 */
MainDetailsInternal.prototype['seoDetails'] = undefined;

/**
 * @member {module:model/DiscordSocialConnectSettingsForGetShopResponse} defaultDiscordSettings
 */
MainDetailsInternal.prototype['defaultDiscordSettings'] = undefined;

/**
 * @member {module:model/ShopDesignForGetShopResponse} design
 */
MainDetailsInternal.prototype['design'] = undefined;

/**
 * @member {Array.<module:model/SocialLinkForGetShopResponse>} socialLinks
 */
MainDetailsInternal.prototype['socialLinks'] = undefined;






export default MainDetailsInternal;

