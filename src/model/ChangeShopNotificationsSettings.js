/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChangeShopNotificationsSettings model module.
 * @module model/ChangeShopNotificationsSettings
 * @version v1
 */
class ChangeShopNotificationsSettings {
    /**
     * Constructs a new <code>ChangeShopNotificationsSettings</code>.
     * @alias module:model/ChangeShopNotificationsSettings
     * @param orderCreated {Boolean} 
     * @param orderCompleted {Boolean} 
     * @param ticketOpened {Boolean} 
     * @param ticketAnswered {Boolean} 
     * @param feedbackReceived {Boolean} 
     * @param feedbackEdited {Boolean} 
     * @param internalUpdates {Boolean} 
     * @param subscriptionExpiration {Boolean} 
     * @param productCreated {Boolean} 
     * @param productEdited {Boolean} 
     * @param productDeleted {Boolean} 
     * @param productOutofStock {Boolean} 
     * @param cashAppAttentionRequired {Boolean} 
     */
    constructor(orderCreated, orderCompleted, ticketOpened, ticketAnswered, feedbackReceived, feedbackEdited, internalUpdates, subscriptionExpiration, productCreated, productEdited, productDeleted, productOutofStock, cashAppAttentionRequired) { 
        
        ChangeShopNotificationsSettings.initialize(this, orderCreated, orderCompleted, ticketOpened, ticketAnswered, feedbackReceived, feedbackEdited, internalUpdates, subscriptionExpiration, productCreated, productEdited, productDeleted, productOutofStock, cashAppAttentionRequired);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, orderCreated, orderCompleted, ticketOpened, ticketAnswered, feedbackReceived, feedbackEdited, internalUpdates, subscriptionExpiration, productCreated, productEdited, productDeleted, productOutofStock, cashAppAttentionRequired) { 
        obj['orderCreated'] = orderCreated;
        obj['orderCompleted'] = orderCompleted;
        obj['ticketOpened'] = ticketOpened;
        obj['ticketAnswered'] = ticketAnswered;
        obj['feedbackReceived'] = feedbackReceived;
        obj['feedbackEdited'] = feedbackEdited;
        obj['internalUpdates'] = internalUpdates;
        obj['subscriptionExpiration'] = subscriptionExpiration;
        obj['productCreated'] = productCreated;
        obj['productEdited'] = productEdited;
        obj['productDeleted'] = productDeleted;
        obj['productOutofStock'] = productOutofStock;
        obj['cashAppAttentionRequired'] = cashAppAttentionRequired;
    }

    /**
     * Constructs a <code>ChangeShopNotificationsSettings</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangeShopNotificationsSettings} obj Optional instance to populate.
     * @return {module:model/ChangeShopNotificationsSettings} The populated <code>ChangeShopNotificationsSettings</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangeShopNotificationsSettings();

            if (data.hasOwnProperty('orderCreated')) {
                obj['orderCreated'] = ApiClient.convertToType(data['orderCreated'], 'Boolean');
            }
            if (data.hasOwnProperty('orderCompleted')) {
                obj['orderCompleted'] = ApiClient.convertToType(data['orderCompleted'], 'Boolean');
            }
            if (data.hasOwnProperty('ticketOpened')) {
                obj['ticketOpened'] = ApiClient.convertToType(data['ticketOpened'], 'Boolean');
            }
            if (data.hasOwnProperty('ticketAnswered')) {
                obj['ticketAnswered'] = ApiClient.convertToType(data['ticketAnswered'], 'Boolean');
            }
            if (data.hasOwnProperty('feedbackReceived')) {
                obj['feedbackReceived'] = ApiClient.convertToType(data['feedbackReceived'], 'Boolean');
            }
            if (data.hasOwnProperty('feedbackEdited')) {
                obj['feedbackEdited'] = ApiClient.convertToType(data['feedbackEdited'], 'Boolean');
            }
            if (data.hasOwnProperty('internalUpdates')) {
                obj['internalUpdates'] = ApiClient.convertToType(data['internalUpdates'], 'Boolean');
            }
            if (data.hasOwnProperty('subscriptionExpiration')) {
                obj['subscriptionExpiration'] = ApiClient.convertToType(data['subscriptionExpiration'], 'Boolean');
            }
            if (data.hasOwnProperty('productCreated')) {
                obj['productCreated'] = ApiClient.convertToType(data['productCreated'], 'Boolean');
            }
            if (data.hasOwnProperty('productEdited')) {
                obj['productEdited'] = ApiClient.convertToType(data['productEdited'], 'Boolean');
            }
            if (data.hasOwnProperty('productDeleted')) {
                obj['productDeleted'] = ApiClient.convertToType(data['productDeleted'], 'Boolean');
            }
            if (data.hasOwnProperty('productOutofStock')) {
                obj['productOutofStock'] = ApiClient.convertToType(data['productOutofStock'], 'Boolean');
            }
            if (data.hasOwnProperty('cashAppAttentionRequired')) {
                obj['cashAppAttentionRequired'] = ApiClient.convertToType(data['cashAppAttentionRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('discordWebhookUrl')) {
                obj['discordWebhookUrl'] = ApiClient.convertToType(data['discordWebhookUrl'], 'String');
            }
            if (data.hasOwnProperty('hideCustomerEmail')) {
                obj['hideCustomerEmail'] = ApiClient.convertToType(data['hideCustomerEmail'], 'Boolean');
            }
            if (data.hasOwnProperty('hideCustomerIp')) {
                obj['hideCustomerIp'] = ApiClient.convertToType(data['hideCustomerIp'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChangeShopNotificationsSettings</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChangeShopNotificationsSettings</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ChangeShopNotificationsSettings.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['discordWebhookUrl'] && !(typeof data['discordWebhookUrl'] === 'string' || data['discordWebhookUrl'] instanceof String)) {
            throw new Error("Expected the field `discordWebhookUrl` to be a primitive type in the JSON string but got " + data['discordWebhookUrl']);
        }

        return true;
    }


}

ChangeShopNotificationsSettings.RequiredProperties = ["orderCreated", "orderCompleted", "ticketOpened", "ticketAnswered", "feedbackReceived", "feedbackEdited", "internalUpdates", "subscriptionExpiration", "productCreated", "productEdited", "productDeleted", "productOutofStock", "cashAppAttentionRequired"];

/**
 * @member {Boolean} orderCreated
 */
ChangeShopNotificationsSettings.prototype['orderCreated'] = undefined;

/**
 * @member {Boolean} orderCompleted
 */
ChangeShopNotificationsSettings.prototype['orderCompleted'] = undefined;

/**
 * @member {Boolean} ticketOpened
 */
ChangeShopNotificationsSettings.prototype['ticketOpened'] = undefined;

/**
 * @member {Boolean} ticketAnswered
 */
ChangeShopNotificationsSettings.prototype['ticketAnswered'] = undefined;

/**
 * @member {Boolean} feedbackReceived
 */
ChangeShopNotificationsSettings.prototype['feedbackReceived'] = undefined;

/**
 * @member {Boolean} feedbackEdited
 */
ChangeShopNotificationsSettings.prototype['feedbackEdited'] = undefined;

/**
 * @member {Boolean} internalUpdates
 */
ChangeShopNotificationsSettings.prototype['internalUpdates'] = undefined;

/**
 * @member {Boolean} subscriptionExpiration
 */
ChangeShopNotificationsSettings.prototype['subscriptionExpiration'] = undefined;

/**
 * @member {Boolean} productCreated
 */
ChangeShopNotificationsSettings.prototype['productCreated'] = undefined;

/**
 * @member {Boolean} productEdited
 */
ChangeShopNotificationsSettings.prototype['productEdited'] = undefined;

/**
 * @member {Boolean} productDeleted
 */
ChangeShopNotificationsSettings.prototype['productDeleted'] = undefined;

/**
 * @member {Boolean} productOutofStock
 */
ChangeShopNotificationsSettings.prototype['productOutofStock'] = undefined;

/**
 * @member {Boolean} cashAppAttentionRequired
 */
ChangeShopNotificationsSettings.prototype['cashAppAttentionRequired'] = undefined;

/**
 * @member {String} discordWebhookUrl
 */
ChangeShopNotificationsSettings.prototype['discordWebhookUrl'] = undefined;

/**
 * @member {Boolean} hideCustomerEmail
 */
ChangeShopNotificationsSettings.prototype['hideCustomerEmail'] = undefined;

/**
 * @member {Boolean} hideCustomerIp
 */
ChangeShopNotificationsSettings.prototype['hideCustomerIp'] = undefined;






export default ChangeShopNotificationsSettings;

