/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ChangeWidgetsRequest model module.
 * @module model/ChangeWidgetsRequest
 * @version v1
 */
class ChangeWidgetsRequest {
    /**
     * Constructs a new <code>ChangeWidgetsRequest</code>.
     * @alias module:model/ChangeWidgetsRequest
     */
    constructor() { 
        
        ChangeWidgetsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChangeWidgetsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangeWidgetsRequest} obj Optional instance to populate.
     * @return {module:model/ChangeWidgetsRequest} The populated <code>ChangeWidgetsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangeWidgetsRequest();

            if (data.hasOwnProperty('crispKey')) {
                obj['crispKey'] = ApiClient.convertToType(data['crispKey'], 'String');
            }
            if (data.hasOwnProperty('googleAnalyticsKey')) {
                obj['googleAnalyticsKey'] = ApiClient.convertToType(data['googleAnalyticsKey'], 'String');
            }
            if (data.hasOwnProperty('hotjarKey')) {
                obj['hotjarKey'] = ApiClient.convertToType(data['hotjarKey'], 'String');
            }
            if (data.hasOwnProperty('intercomKey')) {
                obj['intercomKey'] = ApiClient.convertToType(data['intercomKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChangeWidgetsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChangeWidgetsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['crispKey'] && !(typeof data['crispKey'] === 'string' || data['crispKey'] instanceof String)) {
            throw new Error("Expected the field `crispKey` to be a primitive type in the JSON string but got " + data['crispKey']);
        }
        // ensure the json data is a string
        if (data['googleAnalyticsKey'] && !(typeof data['googleAnalyticsKey'] === 'string' || data['googleAnalyticsKey'] instanceof String)) {
            throw new Error("Expected the field `googleAnalyticsKey` to be a primitive type in the JSON string but got " + data['googleAnalyticsKey']);
        }
        // ensure the json data is a string
        if (data['hotjarKey'] && !(typeof data['hotjarKey'] === 'string' || data['hotjarKey'] instanceof String)) {
            throw new Error("Expected the field `hotjarKey` to be a primitive type in the JSON string but got " + data['hotjarKey']);
        }
        // ensure the json data is a string
        if (data['intercomKey'] && !(typeof data['intercomKey'] === 'string' || data['intercomKey'] instanceof String)) {
            throw new Error("Expected the field `intercomKey` to be a primitive type in the JSON string but got " + data['intercomKey']);
        }

        return true;
    }


}



/**
 * @member {String} crispKey
 */
ChangeWidgetsRequest.prototype['crispKey'] = undefined;

/**
 * @member {String} googleAnalyticsKey
 */
ChangeWidgetsRequest.prototype['googleAnalyticsKey'] = undefined;

/**
 * @member {String} hotjarKey
 */
ChangeWidgetsRequest.prototype['hotjarKey'] = undefined;

/**
 * @member {String} intercomKey
 */
ChangeWidgetsRequest.prototype['intercomKey'] = undefined;






export default ChangeWidgetsRequest;

