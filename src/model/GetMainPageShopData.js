/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StatsForGetShopResponse from './StatsForGetShopResponse';

/**
 * The GetMainPageShopData model module.
 * @module model/GetMainPageShopData
 * @version v1
 */
class GetMainPageShopData {
    /**
     * Constructs a new <code>GetMainPageShopData</code>.
     * @alias module:model/GetMainPageShopData
     */
    constructor() { 
        
        GetMainPageShopData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetMainPageShopData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetMainPageShopData} obj Optional instance to populate.
     * @return {module:model/GetMainPageShopData} The populated <code>GetMainPageShopData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetMainPageShopData();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('buttonText')) {
                obj['buttonText'] = ApiClient.convertToType(data['buttonText'], 'String');
            }
            if (data.hasOwnProperty('disableButton')) {
                obj['disableButton'] = ApiClient.convertToType(data['disableButton'], 'Boolean');
            }
            if (data.hasOwnProperty('disableTitle')) {
                obj['disableTitle'] = ApiClient.convertToType(data['disableTitle'], 'Boolean');
            }
            if (data.hasOwnProperty('disableDescription')) {
                obj['disableDescription'] = ApiClient.convertToType(data['disableDescription'], 'Boolean');
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = StatsForGetShopResponse.constructFromObject(data['statistics']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetMainPageShopData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetMainPageShopData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['buttonText'] && !(typeof data['buttonText'] === 'string' || data['buttonText'] instanceof String)) {
            throw new Error("Expected the field `buttonText` to be a primitive type in the JSON string but got " + data['buttonText']);
        }
        // validate the optional field `statistics`
        if (data['statistics']) { // data not null
          StatsForGetShopResponse.validateJSON(data['statistics']);
        }

        return true;
    }


}



/**
 * @member {String} title
 */
GetMainPageShopData.prototype['title'] = undefined;

/**
 * @member {String} description
 */
GetMainPageShopData.prototype['description'] = undefined;

/**
 * @member {String} buttonText
 */
GetMainPageShopData.prototype['buttonText'] = undefined;

/**
 * @member {Boolean} disableButton
 */
GetMainPageShopData.prototype['disableButton'] = undefined;

/**
 * @member {Boolean} disableTitle
 */
GetMainPageShopData.prototype['disableTitle'] = undefined;

/**
 * @member {Boolean} disableDescription
 */
GetMainPageShopData.prototype['disableDescription'] = undefined;

/**
 * @member {module:model/StatsForGetShopResponse} statistics
 */
GetMainPageShopData.prototype['statistics'] = undefined;






export default GetMainPageShopData;

