/**
 * SellPass.WebApi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellPassWebApi);
  }
}(this, function(expect, SellPassWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellPassWebApi.ShopDesignForGetShopResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ShopDesignForGetShopResponse', function() {
    it('should create an instance of ShopDesignForGetShopResponse', function() {
      // uncomment below and update the code to test ShopDesignForGetShopResponse
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be.a(SellPassWebApi.ShopDesignForGetShopResponse);
    });

    it('should have the property cfImageId (base name: "cfImageId")', function() {
      // uncomment below and update the code to test the property cfImageId
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property buttonText (base name: "buttonText")', function() {
      // uncomment below and update the code to test the property buttonText
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableButton (base name: "disableButton")', function() {
      // uncomment below and update the code to test the property disableButton
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableTitle (base name: "disableTitle")', function() {
      // uncomment below and update the code to test the property disableTitle
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableDescription (base name: "disableDescription")', function() {
      // uncomment below and update the code to test the property disableDescription
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property backgroundCfImageId (base name: "backgroundCfImageId")', function() {
      // uncomment below and update the code to test the property backgroundCfImageId
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property backgroundColor (base name: "backgroundColor")', function() {
      // uncomment below and update the code to test the property backgroundColor
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property primaryColor (base name: "primaryColor")', function() {
      // uncomment below and update the code to test the property primaryColor
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property primaryColorAccent (base name: "primaryColorAccent")', function() {
      // uncomment below and update the code to test the property primaryColorAccent
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property secondaryColor (base name: "secondaryColor")', function() {
      // uncomment below and update the code to test the property secondaryColor
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property primaryTextColor (base name: "primaryTextColor")', function() {
      // uncomment below and update the code to test the property primaryTextColor
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property secondaryTextColor (base name: "secondaryTextColor")', function() {
      // uncomment below and update the code to test the property secondaryTextColor
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableShadows (base name: "disableShadows")', function() {
      // uncomment below and update the code to test the property disableShadows
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableSupport (base name: "disableSupport")', function() {
      // uncomment below and update the code to test the property disableSupport
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property isMainPageVisible (base name: "isMainPageVisible")', function() {
      // uncomment below and update the code to test the property isMainPageVisible
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property fontLink (base name: "fontLink")', function() {
      // uncomment below and update the code to test the property fontLink
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property darkMode (base name: "darkMode")', function() {
      // uncomment below and update the code to test the property darkMode
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableBusinessName (base name: "disableBusinessName")', function() {
      // uncomment below and update the code to test the property disableBusinessName
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableSearchBar (base name: "disableSearchBar")', function() {
      // uncomment below and update the code to test the property disableSearchBar
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property centerProductTitle (base name: "centerProductTitle")', function() {
      // uncomment below and update the code to test the property centerProductTitle
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableBusinessLogo (base name: "disableBusinessLogo")', function() {
      // uncomment below and update the code to test the property disableBusinessLogo
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableReviews (base name: "disableReviews")', function() {
      // uncomment below and update the code to test the property disableReviews
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property disableProductsSold (base name: "disableProductsSold")', function() {
      // uncomment below and update the code to test the property disableProductsSold
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property hideOutOfStockProducts (base name: "hideOutOfStockProducts")', function() {
      // uncomment below and update the code to test the property hideOutOfStockProducts
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property googleAnalyticsKey (base name: "googleAnalyticsKey")', function() {
      // uncomment below and update the code to test the property googleAnalyticsKey
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

    it('should have the property crispChatKey (base name: "crispChatKey")', function() {
      // uncomment below and update the code to test the property crispChatKey
      //var instance = new SellPassWebApi.ShopDesignForGetShopResponse();
      //expect(instance).to.be();
    });

  });

}));
